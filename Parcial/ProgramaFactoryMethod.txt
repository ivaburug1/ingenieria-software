FactoryMethod:

Pizza.cs:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FactoryMethod
{
    public abstract class Pizza
    {
        protected string _descripcion;
        protected string _origen;

        public override string ToString()
        {
            return string.Format("- Tipo '{0}' hecha en {1}", _descripcion, _origen);
        }
    }
}


PizzaCancha.cs:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FactoryMethod
{
    public class PizzaCancha:Pizza
    {
        public PizzaCancha(string origen)
        {
            _descripcion = "Pizza de cancha";
            _origen = origen;
        }
    }
}

PizzaNapolitana.cs:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FactoryMethod
{
    public class PizzaNapolitana:Pizza
    {
        public PizzaNapolitana(string origen)
        {
            _descripcion = "Pizza napolitana";
            _origen = origen;
        }
    }
}


Pizzeria.cs:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FactoryMethod
{
    public abstract class Pizzeria
    {
        public abstract Pizza CrearPizza(string tipo);
    }
}


PizzeriaArgentina:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FactoryMethod
{
    public class PizzeriaArgentina:Pizzeria
    {
        public override Pizza CrearPizza(string tipo)
        {
            if (tipo == "cancha")
            {
                return new PizzaCancha("Argentina");
            }
            else if (tipo == "napo")
            {
                return new PizzaNapolitana("Argentina");
            }
            else
            {
                return null;
            }
        }
    }
}



PizzeriaItaliana.cs:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FactoryMethod
{
    public class PizzeriaItaliana:Pizzeria
    {
        public override Pizza CrearPizza(string tipo)
        {
            if (tipo == "cancha")
            {
                return new PizzaCancha("Italia");
            }
            else if (tipo == "napo")
            {
                return new PizzaNapolitana("Italia");
            }
            else
            {
                return null;
            }
        }
    }
}


Program.cs:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FactoryMethod
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Pizza pizza;
            Pizzeria pizzeria;

            pizzeria = new PizzeriaArgentina();
            pizza = pizzeria.CrearPizza("napo");
            Console.WriteLine(pizza.ToString());
            pizza = pizzeria.CrearPizza("cancha");
            Console.WriteLine(pizza.ToString());

            pizzeria = new PizzeriaItaliana();
            pizza = pizzeria.CrearPizza("napo");
            Console.WriteLine(pizza.ToString());
            pizza = pizzeria.CrearPizza("cancha");
            Console.WriteLine(pizza.ToString());
            Console.ReadKey();
        }
    }
}

